// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gin-gonic/gin"
	"github.com/hong-l1/project/webook/internal/repository"
	"github.com/hong-l1/project/webook/internal/repository/article"
	"github.com/hong-l1/project/webook/internal/repository/cache"
	"github.com/hong-l1/project/webook/internal/repository/dao"
	"github.com/hong-l1/project/webook/internal/service"
	"github.com/hong-l1/project/webook/internal/web"
	"github.com/hong-l1/project/webook/internal/web/jwt"
	"github.com/hong-l1/project/webook/ioc"
)

import (
	_ "github.com/spf13/viper/remote"
)

// Injectors from wire.go:

func InitWebServer() *gin.Engine {
	loggerv1 := ioc.InitLogger()
	v := ioc.InitMiddlewares(loggerv1)
	db := ioc.InitDb(loggerv1)
	userDao := dao.NewUserDao(db)
	cmdable := ioc.InitRedis()
	userCache := cache.NewUserCache(cmdable)
	userRepository := repository.NewRepository(userDao, userCache)
	userService := service.NewUserService(userRepository, loggerv1)
	codeCache := cache.NewCodeCache(cmdable)
	codeRepository := repository.NewCodeRepository(codeCache)
	smsService := ioc.InitSmsService()
	codeService := service.NewCodeService(codeRepository, smsService)
	handle := jwt.NewRedisJWT(cmdable)
	userHandle := web.NewUserHandle(userService, codeService, handle)
	wechatService := ioc.InitOauth2WechatService()
	oAuth2WeChatHandle := web.NewOAuth2WeChatHandle(wechatService, userService, handle)
	articleRepository := article.NewCacheArticle()
	articleService := service.NewServiceArticle(articleRepository)
	articleHandle := web.NewArticleHandle(loggerv1, articleService)
	engine := ioc.InitGin(v, userHandle, oAuth2WeChatHandle, articleHandle)
	return engine
}

func InitArticleHandle() *web.ArticleHandle {
	loggerv1 := ioc.InitLogger()
	articleRepository := article.NewCacheArticle()
	articleService := service.NewServiceArticle(articleRepository)
	articleHandle := web.NewArticleHandle(loggerv1, articleService)
	return articleHandle
}
